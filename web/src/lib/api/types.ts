// DO NOT EDIT THIS: This file was generated by the Pyrin Typescript Generator
import { z } from "zod";

export const SetAnimeUserData = z.object({
  list: z.string().nullable().optional(),
  score: z.number().nullable().optional(),
  episode: z.number().nullable().optional(),
  rewatchCount: z.number().nullable().optional(),
  isRewatching: z.boolean().nullable().optional(),
});

export type SetAnimeUserData = z.infer<typeof SetAnimeUserData>;

export const SigninBody = z.object({
  username: z.string(),
  password: z.string(),
});

export type SigninBody = z.infer<typeof SigninBody>;

export const UpdateUserSettingsBody = z.object({
  displayName: z.string().nullable().optional(),
});

export type UpdateUserSettingsBody = z.infer<typeof UpdateUserSettingsBody>;

export const AnimeTag = z.object({
  slug: z.string(),
  name: z.string(),
});

export type AnimeTag = z.infer<typeof AnimeTag>;

export const AnimeImage = z.object({
  hash: z.string(),
  url: z.string(),
  isCover: z.boolean(),
});

export type AnimeImage = z.infer<typeof AnimeImage>;

export const AnimeUser = z.object({
  list: z.string().nullable(),
  score: z.number().nullable(),
  episode: z.number().nullable(),
  rewatchCount: z.number().nullable(),
  isRewatching: z.boolean(),
});

export type AnimeUser = z.infer<typeof AnimeUser>;

export const AnimeStudio = z.object({
  slug: z.string(),
  name: z.string(),
});

export type AnimeStudio = z.infer<typeof AnimeStudio>;

export const GetAnimeById = z.object({
  id: z.string(),
  title: z.string(),
  titleEnglish: z.string().nullable(),
  description: z.string().nullable(),
  type: z.string(),
  score: z.number().nullable(),
  status: z.string(),
  rating: z.string(),
  episodeCount: z.number().nullable(),
  airingSeason: AnimeTag.nullable(),
  startDate: z.string().nullable(),
  endDate: z.string().nullable(),
  studios: z.array(AnimeStudio),
  tags: z.array(AnimeTag),
  coverUrl: z.string(),
  images: z.array(AnimeImage),
  user: AnimeUser.nullable().optional(),
});

export type GetAnimeById = z.infer<typeof GetAnimeById>;

export const Signup = z.object({
  id: z.string(),
  username: z.string(),
});

export type Signup = z.infer<typeof Signup>;

export const ImportMalListBody = z.object({
  username: z.string(),
  overrideExistingEntries: z.boolean().optional(),
});

export type ImportMalListBody = z.infer<typeof ImportMalListBody>;

export const Page = z.object({
  page: z.number(),
  perPage: z.number(),
  totalItems: z.number(),
  totalPages: z.number(),
});

export type Page = z.infer<typeof Page>;

export const Signin = z.object({
  token: z.string(),
});

export type Signin = z.infer<typeof Signin>;

export const GetMe = z.object({
  id: z.string(),
  username: z.string(),
  role: z.string(),
  displayName: z.string(),
});

export type GetMe = z.infer<typeof GetMe>;

export const GetSystemInfo = z.object({
  version: z.string(),
});

export type GetSystemInfo = z.infer<typeof GetSystemInfo>;

export const Anime = z.object({
  id: z.string(),
  title: z.string(),
  titleEnglish: z.string().nullable(),
  description: z.string().nullable(),
  type: z.string(),
  score: z.number().nullable(),
  status: z.string(),
  rating: z.string(),
  episodeCount: z.number().nullable(),
  airingSeason: AnimeTag.nullable(),
  startDate: z.string().nullable(),
  endDate: z.string().nullable(),
  studios: z.array(AnimeStudio),
  tags: z.array(AnimeTag),
  coverUrl: z.string(),
  images: z.array(AnimeImage),
  user: AnimeUser.nullable().optional(),
});

export type Anime = z.infer<typeof Anime>;

export const SignupBody = z.object({
  username: z.string(),
  password: z.string(),
  passwordConfirm: z.string(),
});

export type SignupBody = z.infer<typeof SignupBody>;

export const ChangePasswordBody = z.object({
  currentPassword: z.string(),
  newPassword: z.string(),
  newPasswordConfirm: z.string(),
});

export type ChangePasswordBody = z.infer<typeof ChangePasswordBody>;

export const ImportMalAnime = z.object({
  animeId: z.string(),
});

export type ImportMalAnime = z.infer<typeof ImportMalAnime>;

export const ImportMalAnimeBody = z.object({
  id: z.string(),
});

export type ImportMalAnimeBody = z.infer<typeof ImportMalAnimeBody>;

export const GetAnimes = z.object({
  page: Page,
  animes: z.array(Anime),
});

export type GetAnimes = z.infer<typeof GetAnimes>;

